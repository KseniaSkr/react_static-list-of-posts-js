{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"018IACaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IACtC,OACD,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SAA4DA,OAG9D,qBAAKE,UAAU,oBAAf,SAAoCD,QCN3BG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIH,UAAU,cAAd,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrCC,G,MAAW,SAAC,GAAD,QAAGC,KAAQT,EAAX,EAAWA,MAAOD,EAAlB,EAAkBA,KAAlB,OACtB,8BACG,eACD,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCFMW,EAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOH,EAAlB,EAAkBA,KAAMR,EAAxB,EAAwBA,KAAMI,EAA9B,EAA8BA,SAA9B,OACtB,qBAAIH,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEhCH,GACC,cAAC,EAAD,CAAUA,KAAMA,OAIpB,mBAAGP,UAAU,iBAAb,SAA+BD,IAE/B,uBAECI,EAASQ,OACR,cAAC,EAAD,CAAaR,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,iCCnBOS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIb,UAAU,WAAd,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCW/B,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBQ,EAUDN,EAAKM,OAThBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAAW,MAU3DZ,UAPsBE,EAOGI,EAAKJ,GANvBa,EAAmBC,QAAO,SAAAvB,GAAO,OAAIA,EAAQwB,SAAWf,MAAO,QADxE,IAAwBA,EAJHU,KAcRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c24e3f3a.chunk.js","sourcesContent":["\nexport const CommentInfo = ({ comment: { name, email, body } }) => (\n  <li className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n      {' by '}\n      <a className=\"CommentInfo__email\" href={`mailto:${email}`}>{email}</a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{body}</div>\n  </li>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </ul>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { email, name } }) => (\n  <p>\n    {' Posted by  '}\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </div>\n\n    <p className=\"PostInfo__body\">{body}</p>\n\n    <hr />\n\n    {comments.length ? (\n      <CommentList comments={comments} />\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </li>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id) || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}